% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bsfp.R
\name{plot_summaries}
\alias{plot_summaries}
\title{plot_summaries}
\usage{
plot_summaries(
  summaries,
  structure,
  output,
  source = NULL,
  xlab.name = NULL,
  sample.labels = NULL,
  biomarker.labels = NULL,
  label.x = FALSE
)
}
\arguments{
\item{summaries}{Output from \code{summarize_factors()} function}

\item{structure}{(string) specify one of "joint" or "individual"}

\item{output}{(string) specify one of "scores", "loadings", "betas"}

\item{source}{(vector of ints) specify source by index from 1:q or NULL if plotting the joint scores}

\item{sample.labels}{(vector of strings) NULL if \code{output != scores}. Otherwise, labels for plotting sample scores, e.g. c(1, "Control", "Control", ...). Could be the outcome used in BSFP. If NULL, plot will highlight credible intervals which don't contain 0.}

\item{label.x}{(Boolean) Should the x-axis labels be plotted? Default is FALSE. There may be many labels which makes the plot messy.}

\item{source.name}{(string) Specify the name of the source, e.g. "Expression" or "Metabolome"}

\item{biomarker.names}{(vector of strings) NULL if \code{structure != "individual}. Otherwise, labels for plotting the biomarker loadings, e.g. c("Gene 1", "Gene 2", ...). If NULL, plot will highlight credible intervals which don't contain 0.}
}
\value{
Returns a list of plots for each factor if plotting loadings or scores. If plotting regression coefficients,
outputs a list with 1 plot only.
}
\description{
Plot the posterior summaries (posterior mean, 95% credible interval) for the estimated
scores, loadings, and regression coefficients.
}
\details{
Plotting function for the posterior means and credible intervals generated from \code{summarize_factors}.
Automatically orders the scores/loadings/regression coefficients by posterior mean for easy visualization.
User can specify loadings or scores to be colored based on a factor using \code{biomarker.labels} or \code{sample.labels}, respectively.
Outputs a list of plots for scores and loadings. See example for how to conveniently view each plot.
}
\examples{
# Setting up the data
n <- 50
p.vec <- c(75, 100)
q <- 2

# Setting up the model parameters
true_params <- list(error_vars = c(1,1),
                    joint_var = 1,
                   indiv_vars = c(1,1),
                   beta_vars = c(1, 1, rep(1, q)),
                   response_vars = c(shape = 1, rate = 1))

# Choose ranks
r <- 3
r.vec <- c(3, 3)
ranks <- c(r, r.vec)

# Number of posterior sampling iterations
nsample <- 1000
burnin <- nsample/2
iters_burnin <- (burnin+1):nsample

# Generate data
data.c1 <- bsfp_data(p.vec, n, ranks, true_params, s2nX = NULL, s2nY = NULL, response = "continuous", sparsity = FALSE)

# Run BSFP for 1000 iterations
bsfp.c1 <- bsfp(data = data.c1$data, Y = data.c1$Y, nsample = nsample)

# Run the alignment algorithm
alignment.c1 <- match_align_bsfp(BSFP.fit = bsfp.c1, y = data.c1$Y,
                                 model_params = bsfp.c1$model_params,
                                 p.vec = p.vec, iters_burnin = iters_burnin)

# Summarize aligned factors
summary.aligned.c1 <- summarize_factors(data = data.c1$data, Y = data.c1$Y,
                                        iters_burnin = iters_burnin,
                                        aligned_results = alignment.c1,
                                        ranks = bsfp.c1$ranks, tau2.draw = bsfp.c1$tau2.draw)
# Plot summaries
plots.joint.scores <- plot_summaries(summary.aligned.c1, structure = "joint", output = "scores")
plots.joint.loadings.source1 <- plot_summaries(summary.aligned.c1, structure = "joint", output = "loadings", source = 1, xlab.name = "Genes")
plots.joint.betas <- plot_summaries(summary.aligned.c1, structure = "joint", output = "betas")

plots.individual.scores.source2 <- plot_summaries(summary.aligned.c1, structure = "individual", output = "scores", source = 2)
plots.individual.loadings.source2 <- plot_summaries(summary.aligned.c1, structure = "individual", output = "loadings", source = 2, xlab.name = "Proteins")
plots.individuaul.betas.source2 <- plot_summaries(summary.aligned.c1, structure = "individual", output = "betas", source = 2)

# View one at a time
plots.joint.scores[[1]] # Joint factor 1
plots.joint.loadings.source1[[2]] # Joint factor 2
plots.joint.betas[[1]] # All regression coefficients for joint factors

plots.individual.scores.source2[[1]] # Scores for individual factor 1 from source 2
plots.individual.loadings.source2[[2]] # Loadings for individual factor 2 from source 2
plots.individuaul.betas.source2[[1]] # All regression coefficients for individual factors for source 2
}
